/*
 *  phiM.lmn -- Dining Philosophers encoded from Maude Program
 *
 *  @author  Masato Gocho
 *  @date    2009.06.15
 */

% property0: hungry状態の哲学者(ID=1)は, 絶対にいつか食にありつける

res = run(
  {
    init_end @@
      proc_generator{$p,@p, n(0,Z)} :- int(Z) |
      $p, n(Z). 
  
    hungry__ @@ {phi=I, state=thinking, $p} :- int(I) |
                {phi=I, state=hungry,   $p}.
    grab1stL @@ {phi=I, state=hungry,   noOfSticks=0}, chopstick(J) :- J=:=I |
                {phi=I, state=hungry,   noOfSticks=1}.
    grab1stR @@ {phi=I, state=hungry,   noOfSticks=0}, n(N), chopstick(J) :- J=:=I mod N + 1 |
                {phi=I, state=hungry,   noOfSticks=1}, n(N).
    grab2ndL @@ {phi=I, state=hungry,   noOfSticks=1}, chopstick(J) :- J=:=I |
                {phi=I, state=eating,   noOfSticks=2}.
    grab2ndR @@ {phi=I, state=hungry,   noOfSticks=1}, n(N), chopstick(J) :- J=:=I mod N + 1 |
                {phi=I, state=eating,   noOfSticks=2}, n(N).
    stopEat_ @@ {phi=I, state=eating,   noOfSticks=J}, n(N) :- int(J), C=(I mod N)+1 |
                {phi=I, state=thinking, noOfSticks=0}, n(N), chopstick(I), chopstick(C).
  },
  {
    proc_generator{
      n=5.
      init1 @@  n(N)   :- int(N) |
                n(N,N).
      init2 @@  n(N,Z) :- N>0, M=N-1 |
                n(M,Z), {phi=N, state=thinking, noOfSticks=0}, chopstick(N).
    }.
 }).

