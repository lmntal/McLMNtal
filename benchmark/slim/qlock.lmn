/*
 *  qlock.lmn -- Mutual Exclusion using Waiting Queue
 *
 *  @author  Masato Gocho
 *  @date    2009.06.10
 *           2009.11.18  modified
 */

%  pthread_mutex方式

% property0: クリティカルセクションに入れるプロセスは常に1つ(以下)である
% property1: クリティカルセクションにいないプロセスは, 必ずいつかクリティカルセクションに入れる
% property2: Strong Fairness -> property1

init{
  n(4).
  init_ @@ n(N) :- N>0, N2=N-1 | 
           n(N2), p{cid(N2), mode=wait}.
}.
iEnd_ @@ init{$i,@i, n(0)}/ :- $i, queue=[tail].

//queue=[tail], p{cid(0), mode=wait}, p{cid(1), mode=wait}, p{cid(2), mode=wait}.

rqst_ @@ % 並ぶ
  p{$p, mode=wait},      F=[    tail |[]]  :- \+($p=($q, '+'(L))) |
  p{$p, mode=rqst, +L1}, F=[L1, tail |[]].
enter @@ % 入る
  p{$p, mode=rqst, +L1}, queue=[L1 |F] :-
  p{$p, mode=crit, +L1}, queue=[L1 |F].

exit_ @@ % 出る
  p{$p, mode=crit, +L1}, queue=[L1 |F] :-
  p{$p, mode=wait},      queue=F.